{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","alt","src","CardList","robots","cardComponent","map","user","i","key","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,oCCOCQ,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAC3B,OACC,yBAAKC,UAAU,uDACd,yBAAKC,IAAM,GAAGC,IAAG,+BAA4BH,EAA5B,cACjB,6BACC,4BAAKF,GACL,2BAAIC,MCYOK,EAjBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACbC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACvC,OACC,kBAAC,EAAD,CAAMC,IAAKD,EACVT,GAAIK,EAAOI,GAAGT,GACdF,KAAOO,EAAOI,GAAGX,KACjBC,MAAOM,EAAOI,GAAGV,WAIpB,OACE,6BACKO,ICAOK,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OACE,yBAAKZ,UAAU,OACd,2BACCA,UAAU,mCACVa,KAAK,SACLC,YAAY,gBACZC,SAAUH,MCCAI,EARA,SAACC,GACf,OACE,yBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,UACpEJ,EAAMK,WCgBIC,G,wDAlBd,WAAYN,GAAO,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACZC,UAAU,GAHM,E,qDAOlB,SAAkBC,EAAOC,GACxBC,KAAKC,SAAU,CAACJ,UAAU,M,oBAG3B,WACC,OAAGG,KAAKJ,MAAMC,SACN,2DAEDG,KAAKX,MAAMK,a,GAhBQQ,cCiDbC,E,kDA1Cd,aAAc,IAAD,8BACZ,gBAcDC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAd1C,EAAKZ,MAAQ,CACZpB,OAAQ,GACR8B,YAAa,IAJF,E,qDAQb,WAAoB,IAAD,OAClBG,MAAM,8CACJ/C,MAAK,SAAAgD,GAAQ,OAAIA,EAASC,UAC1BjD,MAAK,SAAAkD,GAAK,OAAI,EAAKX,SAAS,CAAEzB,OAAQoC,S,oBAQzC,WACC,MAAiCZ,KAAKJ,MAA7BpB,EAAT,EAASA,OAAQ8B,EAAjB,EAAiBA,YACXO,EAAiBrC,EAAOsC,QAAO,SAAAC,GACpC,OAAOA,EAAM9C,KAAK+C,cAAcC,SAASX,EAAYU,kBAEtD,OAAIxC,EAAO0C,OAIT,yBAAK9C,UAAU,MACd,wBAAIA,UAAU,MAAd,eACA,kBAAC,EAAD,CAAWY,aAAcgB,KAAKI,iBAC9B,kBAAC,EAAD,KACC,kBAAC,EAAD,KACC,kBAAC,EAAD,CAAU5B,OAAQqC,OARf,2C,GA1BQX,aCDlBiB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACC,kBAAC,EAAD,OAEDC,SAASC,eAAe,SAM1BhE,K","file":"static/js/main.532d7a77.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nconst Card = ({name, email, id}) => {\n\treturn(\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t\t\t<img alt = '' src = {`https://robohash.org/${id}?200x200`}/>\t\t\n\t\t\t<div>\n\t\t\t\t<h2>{name}</h2>\n\t\t\t\t<p>{email}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n\tconst cardComponent = robots.map((user, i) => {\n\t\treturn (\n\t\t\t<Card key={i} \n\t\t\t\tid={robots[i].id} \n\t\t\t\tname ={robots[i].name} \n\t\t\t\temail={robots[i].email}\n\t\t\t\t/>\n\t\t);\n\t});\n\treturn (\n\t\t\t<div>\n\t\t\t    {cardComponent}\n   \t\t\t</div>\n\t\t);\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchField, searchChange}) => {\n\treturn (\n\t\t\t<div className='pa2'>\n\t\t\t\t<input \n\t\t\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\n\t\t\t\t\ttype='search' \n\t\t\t\t\tplaceholder='search robots'\n\t\t\t\t\tonChange={searchChange}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n\treturn(\n\t\t\t<div style={{ overflowY: 'scroll', border: '5px solid black', height: '500px' }}>\n\t\t\t\t{props.children}\n\t\t\t</div>\n\t\t);\n};\n\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasError: false\n\t\t}\n\t}\n\n\tcomponentDidCatch(error, info){\n\t\tthis.setState( {hasError: true } );\n\t}\n\n\trender() {\n\t\tif(this.state.hasError){\n\t\t\treturn <h1>Oooops! That is not good!!!</h1>\n\t\t}\n\t\treturn this.props.children;\n\t}\n}\nexport default ErrorBoundary;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css'\nimport ErrorBoundary from '../components/ErrorBoundary';\n\n\nclass App extends Component {\n\tconstructor(){\n\t\tsuper();\n\t\tthis.state = {\n\t\t\trobots: [],\n\t\t\tsearchfield: '',\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then(response => response.json())\n\t\t\t.then(users => this.setState({ robots: users }))\n\t\t\n\t}\n\n\tonSearchChange = (event) => {\n\t\tthis.setState({ searchfield: event.target.value });\n\t}\n\n\trender() {\n\t\tconst {  robots, searchfield } = this.state; //destructuring\n\t\tconst filteredRobots = robots.filter(robot => {\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\n\t\t})\n\t\tif(!robots.length){\n\t\t\treturn <h1>Loading</h1>\n\t\t} else {\n\t\t\treturn(\n\t\t\t\t<div className='tc'>\n\t\t\t\t\t<h1 className='f1'>RoboFriends</h1>\n\t\t\t\t\t<SearchBox searchChange={this.onSearchChange} />\n\t\t\t\t\t<Scroll>\n\t\t\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t\t\t<CardList robots={filteredRobots}/>\n\t\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t\t</Scroll>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n  \t<App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}